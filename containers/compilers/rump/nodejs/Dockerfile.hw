FROM projectunik/compilers-rump-base-hw

RUN apt-get update
RUN apt-get install -y python
RUN mkdir -p /opt/nodejs
RUN cd /opt/nodejs && git clone https://github.com/rumpkernel/rumprun-packages
RUN cd /opt/nodejs/rumprun-packages/nodejs && \
    cp ../config.mk.dist ../config.mk && \
    perl -pi -e 's/RUMPRUN_TOOLCHAIN_TUPLE=/RUMPRUN_TOOLCHAIN_TUPLE=x86_64-rumprun-netbsd/g' ../config.mk && \
    make
RUN curl -sL https://deb.nodesource.com/setup | bash -
RUN apt-get install -y nodejs
#RUN npm install browserify -g

#ENV PATH=$PATH:$(npm config get prefix)/bin

VOLUME /opt/code
WORKDIR /opt/nodejs/rumprun-packages/nodejs

# RUN LIKE THIS: docker run --rm -v /path/to/code:/opt/code projectunik/compilers-rump-go-hw
CMD set -x && \
    cp /tmp/build/gomaincaller.go  /tmp/build/mainstub.c . && \
    (if [ -d Godeps ]; then GO15VENDOREXPERIMENT=1 godep restore; fi) && \
    CC=x86_64-rumprun-netbsd-gcc CGO_ENABLED=1 GOOS=rumprun /usr/local/go/bin/go build -buildmode=c-archive -v -a -x  *.go && \
    RUMPRUN_STUBLINK=succeed x86_64-rumprun-netbsd-gcc -g -o program mainstub.c $(find . -name "*.a") && \
    rm -f /opt/code/mainstub.c /opt/code/gomaincaller.go && \
    rumprun-bake $RUMP_BAKE program.bin program
